[core]
logging_conf_file = ${LUIGI_LOGGING_PATH}

; The DAG of the curation workflow can be found here:
; https://bbpteam.epfl.ch/documentation/projects/morphology-processing-workflow
; Arrows are dependencies, so read top to bottom, i.e. the first stage is Collect.

; We'll skip the branches ExtractMarkers->PlotMarkers and DetectErrors->PlotErrors,
; as well as the workflow PlotMorphologies. The plots take a long time and
; produce huge files.
; So the workflow we end up with is:
; Collect -> CheckNeurites -> Sanitize -> Recenter -> Orient -> Align -> Resample.
[Curate]
tag_output = false
dataset_df = ${MCAR_INPUT_CSV_PATH}
result_path = ${MCAR_OUTPUT_DIR}
; Currently the PDF report fails to generate due to this error:
; https://github.com/rst2pdf/rst2pdf/issues/1014
report_path = report.pdf
nb_processes = 4

; Collect external dataset from a CSV file.
[Collect]

; Detect which neurites are present in the morphology, and add soma if missing.
[CheckNeurites]
min_length_first_section = 0.001

; Sanitization is done with neuror.sanitize.sanitize and does:
;    - ensures it can be loaded with MorphIO
;    - raises if the morphology has no soma or of invalid format
;    - removes unifurcations
;    - set negative diameters to zero
;    - raises if the morphology has a neurite whose type changes along the way
;    - removes segments with near zero lengths (shorter than 1e-4)
[Sanitize]

; Translate morphologies so that the soma is at (0, 0, 0).
[Recenter]
skip = false

; Sometimes, morphologies are oriented along non-standard axes.
; If 'y' is provided (default value), not orientation will be applied.
; So this stage is a no-op?
[Orient]

; Try to align using algorithms from morph_tool.transform.align_morphology
; Skip align as well. We don't want to rotate neurons, leave them as they are.
[Align]
skip = true

; Ensures a constant sampling rate of points along all branches.
[Resample]
skip = false

; The stages below are all skipped
[PlotMorphologies]
skip = true

[ExtractMarkers]
skip = true

[PlotMarkers]
skip = true
with_plotly = true

[DetectErrors]
skip = true
min_range = 50

[PlotErrors]
skip = true
with_plotly = true

; Fix radius of the soma and cut the root section of neurites if needed.
[EnsureNeuritesOutsideSoma]
skip = true

; Save error report for each morphology
[ErrorsReport]
skip = false
